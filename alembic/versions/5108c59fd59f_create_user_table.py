# 配置工作做完后，确保本地mysql服务启动，并且有上面配置的数据库后，让我们来生成第一份迁移脚本, 在 sqlalchemy-alembic 目录下运行:
# alembic revision --autogenerate -m "First create user add role table"
# 其中 "First create user add role table" 是这次迁移脚本的备注，类似git commit的message
# 根据model定义的内容，自带生成的升级和降级代码，实际项目中需要检查一下升降级脚本是否有误.
# 接下来，在项目根目录下运行升级命令:
# $ alembic upgrade head
# 其中 head 表示升级到迁移脚本中最新的版本。如果对模型有其它改动，比如新增字段等，可以再次生成迁移脚本，检查无误后运行upgrade完成迁移动作。



"""create_user_table

Revision ID: 5108c59fd59f
Revises: 
Create Date: 2018-08-01 17:05:43.024029

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5108c59fd59f'
down_revision = None
branch_labels = None
depends_on = None



def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('password', sa.String(length=30), nullable=False),
    sa.Column('lastlogin', sa.DateTime(), nullable=True),
    sa.Column('createtime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    # ### end Alembic commands ###
